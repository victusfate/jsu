// Generated by CoffeeScript 1.4.0
(function() {
  var copyObject, crypto, hash, keys, objMap, padNumToString, syncLoop, toNum, _;

  crypto = require('crypto');

  _ = require('underscore');

  hash = function(obj) {
    var oHash;
    oHash = void 0;
    oHash = crypto.createHash("sha1");
    oHash.update(JSON.stringify(obj));
    return oHash.digest("hex");
  };

  padNumToString = function(num, padString) {
    var p;
    p = padString;
    return p.slice(0, p.length - num.toString().length) + num.toString();
  };

  keys = function(obj) {
    return _.keys(obj);
  };

  toNum = function(obj) {
    return parseInt(obj, 10);
  };

  copyObject = function(obj) {
    return JSON.parse(JSON.stringify(obj));
  };

  objMap = function(f, obj) {
    var i, o;
    o = {};
    for (i in obj) {
      o[i] = f(obj[i]);
    }
    return o;
  };

  syncLoop = function(options, i, cb) {
    var compute, condition, item, list, params, res,
      _this = this;
    list = options.list;
    condition = options.condition;
    compute = options.compute;
    params = options.params;
    res = options.res;
    if (i < list.length) {
      item = list[i];
      if (condition(item, params)) {
        return compute(item, params, function(r) {
          res.push(r);
          return syncLoop(options, i + 1, cb);
        });
      } else {
        return syncLoop(options, i + 1, cb);
      }
    } else {
      return cb(null, res);
    }
  };

  module.exports = {
    hash: hash,
    padNumToString: padNumToString,
    keys: keys,
    toNum: toNum,
    copyObject: copyObject,
    objMap: objMap,
    syncLoop: syncLoop
  };

}).call(this);
